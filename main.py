from discord.ext import commands
import g4f
import discord
import asyncio
import re

intents = discord.Intents.default()
intents.message_content = True

bot = commands.Bot(command_prefix='/', intents=intents)

ban_words = ["–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —ç—Ç–æ Bing.", "Bing", "bing"]

# Dictionary to store settings for each server
server_settings = {}


def gpt(query: str):
    response = g4f.ChatCompletion.create(
        model=g4f.models.gpt_4,
        messages=[{"role": "user", "content": query}],
    )
    return response


def filter_response(response):
    # –£–±–∏—Ä–∞–µ–º –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ —Å–ª–æ–≤–∞ –∏ —Ñ—Ä–∞–∑—ã
    for word in ban_words:
        response = response.replace(word.lower(), "")
    return response


def split_message(text, max_length):
    # –†–∞–∑–±–∏–≤–∞–µ–º —Ç–µ–∫—Å—Ç –Ω–∞ —á–∞—Å—Ç–∏ –ø–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –¥–ª–∏–Ω–µ
    return [text[i:i + max_length] for i in range(0, len(text), max_length)]


def remove_links(text):
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏ —É–¥–∞–ª–µ–Ω–∏—è —Å—Å—ã–ª–æ–∫
    return re.sub(r'http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\\(\\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+', '', text)


def remove_square_bracket_content(text):
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏ —É–¥–∞–ª–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –≤ –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã—Ö —Å–∫–æ–±–∫–∞—Ö
    text = re.sub(r'\[[^\]]+\]', '', text)
    # –£–¥–∞–ª—è–µ–º —Å—Ç—Ä–æ–∫–∏ –≤—Ä–æ–¥–µ " :  "" –∏ ((("
    text = re.sub(r'\s*[:\(\-]+\s*["\(]*\s*', '', text)
    return text


@bot.event
async def on_ready():
    print(f'We have logged in as {bot.user}')


@bot.command(name='–º–µ–Ω—é')
async def menu(ctx):

    if ctx.guild is None:
        await ctx.reply("–ö–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–∞—Ö, –∞ –Ω–µ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö.")
        return

    await ctx.send(
        "**üìÉ–º–µ–Ω—é –∞—Ä–±—É–∑–µ—Ä–∞üìÉ**\n\n1)/—Ä–∞—Å–ø–µ—Ç–ª—è–π {–∑–∞–ø—Ä–æ—Å} - –∑–∞–ø—Ä–æ—Å –∫ –ì–ü–¢—à–Ω–∏–∫—É\n2)/–Ω–∞—Å—Ç—Ä–æ–π–∫–∞ - –Ω—É—Ç, —Ç—É—Ç –≤—Å–µ –ø–æ–Ω—è—Ç–Ω–æ\n3)/–∏–∑–º–µ–Ω–∏—Ç—å - –æ–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –≤ /–Ω–∞—Å—Ç—Ä–æ–π–∫–∞")


@bot.command(name='–Ω–∞—Å—Ç—Ä–æ–π–∫–∞')
async def settings(ctx):

    if ctx.guild is None:
        await ctx.reply("–ö–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–∞—Ö, –∞ –Ω–µ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö.")
        return

    guild_id = ctx.guild.id
    if guild_id not in server_settings:
        server_settings[guild_id] = {"enable_link_insertion": False}

    enable_link_insertion = server_settings[guild_id]["enable_link_insertion"]

    await ctx.send(f"**‚öô–Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞—Ä–±—É–∑–µ—Ä–∞‚öô**\n\n1 (–≤—Å—Ç–∞–≤–∫–∞ —Å—Å—ã–ª–æ–∫) - " + (
        "–≤—ã–∫–ª—é—á–µ–Ω–æ‚õî" if enable_link_insertion else "–≤–∫–ª—é—á–µ–Ω–æ‚úÖ") + "\n\n–ß—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É, –Ω–∞–ø–∏—à–∏: /–∏–∑–º–µ–Ω–∏—Ç—å {–Ω–æ–º–µ—Ä –ø–∞—Ä–∞–º–µ—Ç—Ä–∞}")


@bot.command(name='–∏–∑–º–µ–Ω–∏—Ç—å')
async def change_setting(ctx, setting_number: int):

    if ctx.guild is None:
        await ctx.reply("–ö–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–∞—Ö, –∞ –Ω–µ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö.")
        return

    guild_id = ctx.guild.id
    if guild_id not in server_settings:
        server_settings[guild_id] = {"enable_link_insertion": False}

    if setting_number == 1:
        server_settings[guild_id]["enable_link_insertion"] = not server_settings[guild_id]["enable_link_insertion"]
        await ctx.send("–í—Å—Ç–∞–≤–∫–∞ —Å—Å—ã–ª–æ–∫ —Ç–µ–ø–µ—Ä—å " + (
            "–≤—ã–∫–ª—é—á–µ–Ω–∞üíÄ" if server_settings[guild_id]["enable_link_insertion"] else "–≤–∫–ª—é—á–µ–Ω–∞üî•"))
    else:
        await ctx.send("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä –ø–∞—Ä–∞–º–µ—Ç—Ä–∞.")


@bot.command(name='—Ä–∞—Å–ø–µ—Ç–ª—è–π')
async def generate_response(ctx, *, query: str):

    if ctx.guild is None:
        await ctx.reply("–ö–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–∞—Ö, –∞ –Ω–µ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö.")
        return

    query = query.strip()
    if not query:
        await ctx.reply("–°–∞–º—ã–π —É–º–Ω—ã–π?ü§° –ê –≤–≤–µ—Å—Ç–∏ –∑–∞–ø—Ä–æ—Å?")
        return
    generating_message = await ctx.reply("–ì–µ–Ω–µ—Ä–∏—Ä—É—é –æ—Ç–≤–µ—Ç‚åõ")

    guild_id = ctx.guild.id
    if guild_id not in server_settings:
        server_settings[guild_id] = {"enable_link_insertion": False}

    enable_link_insertion = server_settings[guild_id]["enable_link_insertion"]

    response = await asyncio.to_thread(gpt, query)
    filtered_response = filter_response(response.lower())
    if enable_link_insertion:
        filtered_response = remove_links(filtered_response)
        filtered_response = remove_square_bracket_content(filtered_response)
    for chunk in split_message(filtered_response, max_length=2000):
        print(chunk)
        await ctx.reply(chunk)
    await generating_message.delete()


bot.run('')
